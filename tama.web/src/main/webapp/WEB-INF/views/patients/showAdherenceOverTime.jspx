<div xmlns:spring="http://www.springframework.org/tags"
     xmlns:util="urn:jsptagdir:/WEB-INF/tags/util">

    <spring:url value="/json/adherence/list" var="adherence_list_url"/>
    <script type="text/javascript">
        dojo.require("dojox.charting.Chart2D");
        dojo.require("dojox.charting.axis2d.Default");
        dojo.require("dojox.charting.plot2d.Lines");
        dojo.require("dojox.charting.plot2d.Areas");
        dojo.require("dojox.charting.widget.Legend");

        var AdherencePerWeekData = function(list){
            this.list = list;
        }

        AdherencePerWeekData.prototype = {
            colorFor: function(percentage){
                if(percentage >= 90 ) return "green";
                if(percentage >= 70 ) return "orange";
                return "red";
            },

            xLabels: function(){
                return this.dateList().map(function(elt, index) { return {value: index + 1, text: elt}});
            },

            dateList: function() {
                var dailyDateList = this.list.dailyAdherenceSummary.map(function(elt){ return elt.date});
                var weeklyDateList = this.list.weeklyAdherenceSummary.map(function(elt){ return elt.date});
                return dailyDateList.concat(weeklyDateList).sort();
            },

            yValues: function(adherenceSummaryType){
                var self = this;
                return this.dateList().map(function(weekStartDate) {
                    var adherenceSummary = self.list[adherenceSummaryType].filter(function(adherenceList) { return adherenceList.date == weekStartDate})[0];
                    var percentage = (adherenceSummary == undefined) ? 0 : adherenceSummary.percentage;
                    return {y: percentage, color: self.colorFor(percentage)};
                });
            },

            totalNumberOfWeeks: function(){
                return this.dateList().length;
            }
        }

        var AdherenceOverTimeWidget = function(dailyAdherenceOverTimeChart, weeklyAdherenceOverTimeChart, dataUrl){
            this.dailyAdherenceOverTimeChart = dailyAdherenceOverTimeChart;
            this.weeklyAdherenceOverTimeChart = weeklyAdherenceOverTimeChart;
            this.dataURL = dataUrl;
        }

        AdherenceOverTimeWidget.prototype = {
            fetchData: function(onLoad){
                dojo.xhrGet({
                    url: this.dataURL,
                    handleAs: "json",
                    load: function(json, ioArgs) { onLoad(new AdherencePerWeekData(json)); },
                    error: function(result, args) { }
                });
            },

            draw: function(){
                var self = this;
                this.fetchData(function(adherencePerWeekData){
                    self.dailyAdherenceOverTimeChart.draw(adherencePerWeekData);
                    self.weeklyAdherenceOverTimeChart.draw(adherencePerWeekData);
                });
            },
        }

        var AdherenceOverTimeChartWidget = function(targetDivId, adherenceSummaryType){
            this.targetDivId = targetDivId;
            this.adherenceSummaryType = adherenceSummaryType;
            this.chartRenderer = new dojox.charting.Chart2D(this.targetDivId);
            this.chartRenderer.addPlot("default", {type: "Columns", gap: 5, minBarSize: 10, maxBarSize: 50});
        }

        AdherenceOverTimeChartWidget.prototype = {
            draw : function(adherencePerWeekData){
                this.chartRenderer.addAxis("x", {labels: adherencePerWeekData.xLabels(),
                                                 majorTicks: true,
                                                 majorTickStep: 1,
                                                 minorTicks: false,
                                                 rotation: -50 })
                this.chartRenderer.addAxis("y", {vertical:true, min:0, max: 100});
                this.chartRenderer.addSeries("Adherence Over Time", adherencePerWeekData.yValues(this.adherenceSummaryType));
                this.resizeAndRenderChart(adherencePerWeekData.totalNumberOfWeeks());
            },

            resizeAndRenderChart: function(numberOfWeeks){
                var chartDiv = dojo.byId(this.targetDivId);
                var width = numberOfWeeks > 20 ? numberOfWeeks * 25 : parseInt(chartDiv.style.width);
                this.chartRenderer.resize(width, parseInt(chartDiv.style.height));
            }
        }

        dojo.addOnLoad(function(){
            var adherenceListUrl = "${adherence_list_url}?id=${patient.id}";
            var dailyAdherenceOverTimeChart = new AdherenceOverTimeChartWidget("chartOne", "dailyAdherenceSummary");
            var weeklyAdherenceOverTimeChart = new AdherenceOverTimeChartWidget("chartTwo", "weeklyAdherenceSummary");
            var adherenceOverTimeWidget = new AdherenceOverTimeWidget(dailyAdherenceOverTimeChart, weeklyAdherenceOverTimeChart, adherenceListUrl);
            adherenceOverTimeWidget.draw();
        });
    </script>

    <div>
        <util:panel id="adherence-over-time" title="Adherence Captured Over Time" openPane="true">
            <div style="overflow-x:auto">
                <div>
                    <div class="adherenceChartTitle">Daily Adherence over time Graph</div>
                    <div id="chartOne" style="width: 800px; height: 300px; display: inline-block;"/>
                </div>
                <div>
                    <div class="adherenceChartTitle">Weekly Adherence over time Graph</div>
                    <div id="chartTwo" style="width: 800px; height: 300px; display: inline-block;"/>
                </div>
            </div>
        </util:panel>
    </div>
</div>