// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.motechproject.tama.integration.domain.ivrlanguage;

import java.util.List;
import java.util.Random;

import org.motechproject.tama.domain.IVRLanguage;
import org.springframework.stereotype.Component;

privileged aspect IVRLanguageDataOnDemand_Roo_DataOnDemand {
    
    declare @type: IVRLanguageDataOnDemand: @Component;
    
    private Random IVRLanguageDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<IVRLanguage> IVRLanguageDataOnDemand.data;
    
    public IVRLanguage IVRLanguageDataOnDemand.getNewTransientIVRLanguage(int index) {
        IVRLanguage obj = new IVRLanguage();
        setName(obj, index);
        return obj;
    }
    
    public void IVRLanguageDataOnDemand.setName(IVRLanguage obj, int index) {
        java.lang.String name = "name_" + index;
        obj.setName(name);
    }
    
    public IVRLanguage IVRLanguageDataOnDemand.getSpecificIVRLanguage(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        IVRLanguage obj = data.get(index);
        return IVRLanguage.findIVRLanguage(obj.getId());
    }
    
    public IVRLanguage IVRLanguageDataOnDemand.getRandomIVRLanguage() {
        init();
        IVRLanguage obj = data.get(rnd.nextInt(data.size()));
        return IVRLanguage.findIVRLanguage(obj.getId());
    }
    
    public boolean IVRLanguageDataOnDemand.modifyIVRLanguage(IVRLanguage obj) {
        return false;
    }
    
    public void IVRLanguageDataOnDemand.init() {
        data = IVRLanguage.findIVRLanguageEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'IVRLanguage' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<IVRLanguage>();
        for (int i = 0; i < 10; i++) {
            IVRLanguage obj = getNewTransientIVRLanguage(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
