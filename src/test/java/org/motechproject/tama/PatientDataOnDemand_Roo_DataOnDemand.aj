// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.motechproject.tama;

import java.util.List;
import java.util.Random;
import org.motechproject.tama.DoctorDataOnDemand;
import org.motechproject.tama.GenderDataOnDemand;
import org.motechproject.tama.InitialsDataOnDemand;
import org.motechproject.tama.Patient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect PatientDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PatientDataOnDemand: @Component;
    
    private Random PatientDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Patient> PatientDataOnDemand.data;
    
    @Autowired
    private GenderDataOnDemand PatientDataOnDemand.genderDataOnDemand;
    
    @Autowired
    private InitialsDataOnDemand PatientDataOnDemand.initialsDataOnDemand;
    
    @Autowired
    private DoctorDataOnDemand PatientDataOnDemand.doctorDataOnDemand;
    
    public Patient PatientDataOnDemand.getNewTransientPatient(int index) {
        org.motechproject.tama.Patient obj = new org.motechproject.tama.Patient();
        setPatientId(obj, index);
        setMobilePhoneNumber(obj, index);
        setDateOfBirth(obj, index);
        setTravelTimeToClincInDays(obj, index);
        setTravelTimeToClincInHours(obj, index);
        setTravelTimeToClincInMinutes(obj, index);
        setGender(obj, index);
        setInitials(obj, index);
        setPrincipalDoctor(obj, index);
        return obj;
    }
    
    public void PatientDataOnDemand.setPatientId(Patient obj, int index) {
        java.lang.String patientId = "patientId_" + index;
        obj.setPatientId(patientId);
    }
    
    public void PatientDataOnDemand.setMobilePhoneNumber(Patient obj, int index) {
        java.lang.String mobilePhoneNumber = "mobilePhoneNumber_" + index;
        obj.setMobilePhoneNumber(mobilePhoneNumber);
    }
    
    public void PatientDataOnDemand.setDateOfBirth(Patient obj, int index) {
        java.util.Date dateOfBirth = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setDateOfBirth(dateOfBirth);
    }
    
    public void PatientDataOnDemand.setTravelTimeToClincInDays(Patient obj, int index) {
        int travelTimeToClincInDays = index;
        obj.setTravelTimeToClincInDays(travelTimeToClincInDays);
    }
    
    public void PatientDataOnDemand.setTravelTimeToClincInHours(Patient obj, int index) {
        int travelTimeToClincInHours = index;
        obj.setTravelTimeToClincInHours(travelTimeToClincInHours);
    }
    
    public void PatientDataOnDemand.setTravelTimeToClincInMinutes(Patient obj, int index) {
        int travelTimeToClincInMinutes = index;
        obj.setTravelTimeToClincInMinutes(travelTimeToClincInMinutes);
    }
    
    public void PatientDataOnDemand.setGender(Patient obj, int index) {
        org.motechproject.tama.Gender gender = genderDataOnDemand.getRandomGender();
        obj.setGender(gender);
    }
    
    public void PatientDataOnDemand.setInitials(Patient obj, int index) {
        org.motechproject.tama.Initials initials = initialsDataOnDemand.getRandomInitials();
        obj.setInitials(initials);
    }
    
    public void PatientDataOnDemand.setPrincipalDoctor(Patient obj, int index) {
        org.motechproject.tama.Doctor principalDoctor = doctorDataOnDemand.getRandomDoctor();
        obj.setPrincipalDoctor(principalDoctor);
    }
    
    public Patient PatientDataOnDemand.getSpecificPatient(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Patient obj = data.get(index);
        return Patient.findPatient(obj.getId());
    }
    
    public Patient PatientDataOnDemand.getRandomPatient() {
        init();
        Patient obj = data.get(rnd.nextInt(data.size()));
        return Patient.findPatient(obj.getId());
    }
    
    public boolean PatientDataOnDemand.modifyPatient(Patient obj) {
        return false;
    }
    
    public void PatientDataOnDemand.init() {
        data = org.motechproject.tama.Patient.findPatientEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Patient' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.motechproject.tama.Patient>();
        for (int i = 0; i < 10; i++) {
            org.motechproject.tama.Patient obj = getNewTransientPatient(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
