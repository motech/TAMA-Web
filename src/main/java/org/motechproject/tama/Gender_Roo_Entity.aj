// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.motechproject.tama;

import java.lang.Integer;
import java.util.List;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonProperty;
import org.ektorp.support.TypeDiscriminator;
import org.motechproject.tama.repository.Genders;
import org.springframework.beans.factory.annotation.Autowired;

import static org.motechproject.tama.Gender.genders;

privileged aspect Gender_Roo_Entity {


    @Autowired
    transient Genders Gender.genders;


    @TypeDiscriminator
    private String Gender.documentType = "Gender";

    @JsonProperty("_id")
    private String Gender.id;

    @JsonProperty("_rev")
    private String Gender.revision;

    private Integer Gender.version;

    public Integer Gender.getVersion() {
        return version;
    }

    public void Gender.setVersion(Integer version) {
        this.version = version;
    }

    @JsonIgnore
    public String Gender.getId() {
        return this.id;
    }

    public void Gender.setId(String id) {
        this.id = id;
    }

    @JsonIgnore
    public String Gender.getRevision() {
        return this.revision;
    }

    public void Gender.setRevision(String revision) {
        this.revision = revision;
    }

    public String Gender.getDocumentType() {
        return this.documentType;
    }

    public void Gender.setDocumentType(String documentType) {
        this.documentType = documentType;
    }

    public void Gender.persist() {
        this.genders.add(this);
    }

    public void Gender.remove() {
        this.genders.remove(this);
    }

    public void Gender.flush() {
    }

    public void Gender.clear() {
    }

    public Gender Gender.merge() {
       this.setRevision(this.genders.get(this.getId()).getRevision());
       this.genders.update(this);
       return this;
    }

    public static final Genders Gender.genders() {
        Genders genders = new Gender().genders;
        return genders;
    }

    public static long Gender.countGenders() {
        return genders().getAll().size();
    }

    public static List<Gender> Gender.findAllGenders() {
       return  genders().getAll();
    }

    public static Gender Gender.findGender(String id) {
        if (id == null) return null;
        return genders().get(id);
    }

    public static List<Gender> Gender.findGenderEntries(int firstResult, int maxResults) {
         return genders().getAll();
    }

    @JsonIgnore
    public Genders Gender.getGenders() {
        return genders;
    }

    public void Gender.setGenders(Genders genders) {
        this.genders = genders;
    }
    

}
